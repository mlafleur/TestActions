# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger: none

pool:
  vmImage: 'windows-latest'
  name: Azure Pipelines
  demands:
  - msbuild
  - visualstudio
  - vstest

steps:
- task: NuGetToolInstaller@1
  displayName: 'Use NuGet '

- task: NuGetCommand@2
  displayName: 'NuGet restore'

- task: VSBuild@1
  displayName: 'Build solution **\*.sln'
  inputs:
    platform: 'Any CPU'
    configuration: Debug

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: pack
    nobuild: true
    versioningScheme: byPrereleaseNumber

- task: VSTest@2
  displayName: 'VsTest - testAssemblies'
  continueOnError: true
  inputs:
    testAssemblyVer2: |
     **\*Tests.dll
     **\*tests.dll
     !**\*TestAdapter.dll
     !**\obj\**
    runSettingsFile: '$(System.DefaultWorkingDirectory)/.runsettings'
    runInParallel: true
    codeCoverageEnabled: true
    diagnosticsEnabled: true

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)/temp'
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/temp'

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'

- task: BuildQualityChecks@8
  displayName: 'Check build quality'
  inputs:
    checkWarnings: true
    warningFailOption: fixed
    showStatistics: true
    checkCoverage: true
    baseDefinitionId: 2

- task: PublishTestResults@2
  displayName: 'Publish Test Results **/*.trx'
  inputs:
    testResultsFormat: VSTest
    testResultsFiles: '**/*.trx'
    searchFolder: '$(Agent.TempDirectory)'
    failTaskOnFailedTests: true