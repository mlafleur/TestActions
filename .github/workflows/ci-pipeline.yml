name: "Jira Ticket Referenced"
on: pull_request
permissions: write-all
jobs:
  varify:
    runs-on: ubuntu-latest
    steps:
      - name: Jira Ticket in Title
        id: jira
        uses: FidelusAleksander/gh-action-regex@master
        with:
          regex_pattern: "[A-Z|a-z]+-[0-9]+"
          text: ${{ github.event.pull_request.title }}

      - uses: marocchino/sticky-pull-request-comment@v2.6.2
        if: steps.jira.outputs.match == 'false' && github.event_name == 'pull_request' && (success() || failure())
        with:
          hide_and_recreate: true
          header: "JIRA_REC"
          message: |
            WARNING: Missing Jira Ticket Reference
              
            Pull Requests should reference a Jira ticket in their title. 

            If a PR address multiple tickets, the title should include the primary ticked and include the remaining ticket references in the PR description.

    #   - uses: actions/checkout@v3
    #   - uses: actions/setup-dotnet@v3
    #     with:
    #       dotnet-version: 6.0.x
    #   - run: dotnet test "Test Solution.sln" --results-directory "TestResults/" --settings .runsettings
    #   - run: dotnet tool restore
    #     if: always()

    #   - name: Merge code coverage results
    #     run: dotnet tool run dotnet-coverage merge TestResults/ --recursive --output TestResults/coverage-cobertura.xml --output-format cobertura --remove-input-files
    #     if: always()

    #   - uses: mlafleur/code-coverage-report-action@v1.2.0-beta
    #     name: Coverage by Package
    #     id: code_coverage_report_action
    #     if: always()
    #     with:
    #       filename: "TestResults/coverage-cobertura.xml"
    #       fail_on_negative_difference: true
    #       negative_difference_by: "overall"
    #       markdown_filename: code-coverage-diff
    #       artifact_download_workflow_names: "CheckCoverage"
    #       badge: true

    #   - run: echo "COVER_REPORT=$(cat code-coverage-diff >> $COVER_REPORT)" >> $GITHUB_ENV
    #     if: always()

    #   - name: Publish package coverage validation results
    #     uses: marocchino/sticky-pull-request-comment@v2.6.2
    #     if: steps.code_coverage_report_action.outputs.file != '' && github.event_name == 'pull_request' && (success() || failure())
    #     with:
    #       recreate: true
    #       path:
    #       header: All
    #       message: |
    #         <details open>
    #         ${{ env.COVER_REPORT }}
    #         </details>
